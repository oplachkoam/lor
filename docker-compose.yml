name: lor

services:
  postgres:
    container_name: lor-postgres
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # only for local
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - main

  migrator:
    container_name: lor-migrator
    build: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "uv", "run", "python", "migrations/migrator.py" ]
    networks:
      - main

  server:
    container_name: lor-server
    build: .
    env_file: .env
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/ping" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - main

  frontend:
    container_name: lor-frontend
    build: ./frontend
    ports:
      - "80:80"
    restart: on-failure

volumes:
  postgres-data:
    name: lor-postgres-data

networks:
  main:
    name: lor-net
    driver: bridge